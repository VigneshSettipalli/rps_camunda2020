package org.boa.usvisaprocess;

import static org.camunda.bpm.engine.variable.Variables.putValue;

import java.util.Calendar;


import org.camunda.bpm.engine.HistoryService;
import org.camunda.bpm.engine.ProcessEngine;
import org.camunda.bpm.engine.ProcessEngines;
import org.camunda.bpm.engine.RuntimeService;
import org.camunda.bpm.engine.query.PeriodUnit;
import org.camunda.bpm.engine.runtime.ProcessInstance;
import org.camunda.bpm.spring.boot.starter.annotation.EnableProcessApplication;
import org.camunda.bpm.spring.boot.starter.event.ProcessApplicationStartedEvent;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.event.EventListener;

@SpringBootApplication
@EnableProcessApplication("usvisaprocess")
public class CamundaApplication {
	
	private Logger logger=LoggerFactory.getLogger(CamundaApplication.class);
	@Autowired
	private RuntimeService runTimeService;
	//@Autowired
	//private HistoryService historyService;
	private static final String PROCESS_DEFINITION_KEY = "generateRandom";	
	  public static void main(String... args) {
	    SpringApplication.run(CamundaApplication.class, args);
	  }
	@EventListener  
    public void onStart(final ProcessApplicationStartedEvent event)
    {
		ProcessEngine processEngine=ProcessEngines.getDefaultProcessEngine();		
		ProcessInstance processInstance=runTimeService.startProcessInstanceByKey(PROCESS_DEFINITION_KEY,
	    	      putValue("email","parameswari@gmail.com"));
		HistoryService historyService = processEngine.getHistoryService();
        System.out.println(historyService.createHistoricJobLogQuery().count());
        Calendar calendar = Calendar.getInstance();
        historyService.createHistoricProcessInstanceReport()
          .startedBefore(calendar.getTime())
          .duration(PeriodUnit.MONTH);
        logger.info(processEngine.VERSION);
		
    	
    }

}
